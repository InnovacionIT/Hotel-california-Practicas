# Generated by Django 4.2.2 on 2023-06-20 18:10

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Hotel',
            fields=[
                ('hotelId', models.AutoField(primary_key=True, serialize=False)),
                ('razonSocial', models.CharField(max_length=150)),
                ('cuil', models.CharField(max_length=13, unique=True, validators=[django.core.validators.RegexValidator(message='CUIL inv√°lido', regex='^(20|2[3-7]|30|3[3-4])(\\d{8})(\\d)$')])),
                ('domicilio', models.CharField(max_length=150)),
                ('localidad', models.CharField(max_length=100)),
                ('provincia', models.CharField(max_length=100)),
                ('cp', models.PositiveSmallIntegerField()),
                ('telefono', models.PositiveBigIntegerField()),
                ('categoria', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
            ],
            options={
                'verbose_name': 'Todos los hoteles disponibles',
                'verbose_name_plural': 'Hoteles',
                'db_table': 'Hotel',
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('usuarioId', models.AutoField(primary_key=True, serialize=False)),
                ('imagen', models.ImageField(blank=True, upload_to='img/perfil')),
                ('nombre', models.CharField(max_length=100)),
                ('apellido', models.CharField(max_length=100)),
                ('usuario', models.EmailField(max_length=254, unique=True)),
                ('fechaDeNacimiento', models.DateField()),
                ('telefono', models.PositiveBigIntegerField()),
                ('ciudad', models.CharField(max_length=256)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Todos los clientes registrados',
                'verbose_name_plural': 'Clientes',
                'db_table': 'Cliente',
            },
        ),
        migrations.CreateModel(
            name='Empleado',
            fields=[
                ('empleadoId', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100)),
                ('apellido', models.CharField(max_length=100)),
                ('usuario', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=150)),
                ('domicilio', models.CharField(max_length=150)),
                ('localidad', models.CharField(max_length=100)),
                ('provincia', models.CharField(max_length=100)),
                ('cp', models.PositiveSmallIntegerField()),
                ('telefono', models.PositiveBigIntegerField()),
                ('rol', models.CharField(max_length=70)),
                ('hotelId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GestionUsuarios.hotel')),
            ],
            options={
                'verbose_name': 'Todos los empleados registrados en el hotel',
                'verbose_name_plural': 'Empleados',
                'db_table': 'Empleado',
            },
        ),
    ]
